새 프로젝트

- New > Spring Legacy Project > Spring MVC Project > "SecurityTest" > "com.test.spring" > Finish


이전 인증 방식 > 세션(쿠키) 기반 + 직접 처리
스프링 프레임워크 > 인증 > Spring Security Project


스프링 시큐리티

프로젝트 설정

1. 일괄 설정
	- pom.xml
	- web.xml
	- root-context.xml

2. WEB-INF > lib > ojdbc6.jar	
	- Build Path 추가

3. pom.xml
	- 시큐리티 의존성 4개 추가

4. 패키지
	- "com.test.controller"
	- "com.test.persistence"
	- "com.test.domain"
	- "com.test.mapper"
	- "com.test.security"

5. servlet-context.xml 
	- 스캔 추가	


6. security-context.xml
	- 파일 생성
	- /WEB-INF/spring/security-context.xml
	- 스프링 시큐리티의 전반적인 설정


7. web.xml
	- 스프링 시큐리티가 동작할 수 있게 필터 추가 


8. 실행
	- 에러 > "No bean named 'springSecurityFilterChain' available"
	- security-context.xml를 찾지 못해서..

8.1 web.xml > security-context.xml 위치 추가

8.2 security-context.xml > 기본 구문 작성

8.3 실행



9. 기본적인 URI 설계
	- /index.do > 초기 페이지(모두 접근)
	- /member/member.do > 회원 페이지(회원만 접근, 관리자도 접근)
	- /admin/admin.do > 관리자 페이지(관리자만 접근)

9.1 파일 생성
	- com.test.controller > "TestController.java"
	- views > "index.jsp"
		    > "member" > "member.jsp"
		    > "admin"  > "admin.jsp"
		    > "inc"    > "header.jsp"

9.2 실행
	- 정상 실행		    


10. 로그인
	- security-context.xml 수정
	
10.1 pattern 속성
	- 접근할 URI
	
10.2 access 속성
	- 표현식
	- 접근 권한

10.3 실행
	- index.do
		> 접근 성공
	- member.do
		> 접근 실패
		> http://localhost:8090/spring/login
		> 빌트인 로그인 페이지로 이동(권한 없어서..)



11. 단순 로그인
	- 직접 구현(X)
	- 내장 구현(O)

11.1 주의점(***)
	- 일반 시스템(id) == 스프링 시큐리티(username)

11.2 sercurity-context.xml 수정
	- 계정 추가










