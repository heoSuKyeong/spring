<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 폼 로그인 방식으로 보안을 구성하겠다는 의미 -->
	<security:http>
	
		<!-- 어떤 경로에 어떤 권한을 줄 지 설정 -->
		<!-- index.do 페이지에 모두 접근 가능하다. -->
		<security:intercept-url pattern="/index.do" access="permitAll"/>
		<!-- member.do 페이지에 'ROLE_MEMBER' role를 가진 사용자만 접근 가능하다. 롤 이름은 개발자가 설정하며 관습적으로 'ROLE_MEMBER'를 사용한다. -->
		<security:intercept-url pattern="/member/member.do" access="hasRole('ROLE_MEMBER')"/>
		
		<!-- 이곳에서 명시되지 않은 URI은 모든 사용자가 접근 가능 -->
		secu<security:intercept-url pattern="/admin/admin.do" access="hasRole('ROLE_ADMIN')"/>
	
		<security:form-login/>
	</security:http>
	
	<!-- 계정 관리 매니저 : 회원아이디, 비번, 권한등급 등을 관리한다. -->
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- 제공자 -->
			<security:user-service>
				<!-- 5 버전 이후부터는 password 암호화를 해야한다. {noop}를 붙이면 암호화를 하지않아도 일단은 사용할 수 있다. -->
				<security:user name="susukkang" password="{noop}1111" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}1111" authorities="ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	
	</security:authentication-manager>

</beans>
